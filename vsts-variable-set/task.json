{
    "id": "3ca44a28-62de-4c60-8d77-a99065b95a8a",
    "name": "VariableSetTask",
    "friendlyName": "Set Variable #{Extension.Tag}#",
    "description": "Sets a variable.",
    "helpMarkDown": "Version: #{Build.BuildNumber}#. [More Information](https://github.com/jessehouwing/vsts-variable-tasks/wiki/)",
    "category": "Utility",
    "author": "Jesse Houwing",
    "version": {
        "Major": 0,
        "Minor": 0,
        "Patch": 0
    },
    "visibility": [
        "Build",
        "Release"
    ],
    "minimumAgentVersion": "1.83.0",
    "groups": [
    ],
    "inputs": [
        {
            "defaultValue": "",
            "helpMarkdown": "Variable to set. Only supply the variable name and do not include `$(...)`.",
            "label": "Variable",
            "name": "VariableName",
            "required": true,
            "type": "string"
        },
        {
            "defaultValue": "",
            "helpMarkdown": "The value to assign to the variable.",
            "label": "Value",
            "name": "Value",
            "required": false,
            "type": "string"
        },
        {
            "name": "applyConstraint",
            "type": "boolean",
            "label": "Only apply value if constraint is met",
            "defaultValue": "False",
            "required": false,
            "helpMarkDown": "If checked you can set a constraint using a regex on a certain variable which must be met before the actual value will be set."
        },
        {
            "name": "IfVariable",
            "type": "string",
            "label": "Variable to validate",
            "defaultValue": "",
            "required": false,
            "visibleRule": "applyConstraint = true",
            "helpMarkDown": "A variable or value that will be checked. Here you include the `$(...)`."
        },
        {
            "name": "IfValueRegex",
            "type": "string",
            "label": "Regular expression",
            "defaultValue": "",
            "required": false,
            "visibleRule": "applyConstraint = true",
            "helpMarkDown": "A regular expression you can use to validate the variable with."
        },
        {
            "name": "applyAlternativeValue",
            "type": "boolean",
            "label": "Apply an alternative value",
            "defaultValue": "False",
            "required": false,
            "visibleRule": "applyConstraint = true",
            "helpMarkDown": "If you want to apply an alternative value in case constraint is not met."
        },
        {
            "name": "AlternativeValue",
            "type": "string",
            "label": "Alternative value",
            "defaultValue": "",
            "required": false,
            "visibleRule": "applyAlternativeValue = true",
            "helpMarkDown": "Value to apply if constraint is not met."
        }
    ],
    "instanceNameFormat": "Set variable: $(VariableName) to: '$(Value)'",
    "execution": {
        "Node": {
            "target": "vsts-variable-set.js",
            "argumentFormat": ""
        },
        "PowerShell": {
            "target": "$(currentDirectory)\\vsts-variable-set.ps1",
            "argumentFormat": "",
            "platforms": [
                "windows"
            ]
        }
    }
}
